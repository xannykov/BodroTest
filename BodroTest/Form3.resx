<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>